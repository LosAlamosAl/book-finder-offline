# create-stack --stack-name simple-lambda --template-body file://simple-lambda.yml --capabilities CAPABILITY_NAMED_IAM
# ...wait a while...
# aws cloudformation list-stacks
# ...to see if it's been created...
# aws lambda invoke --invocation-type RequestResponse --function-name simple-lambda out.txt
# cat out.txt
# rm out.txt
# ...explore stack, lambda, role in the console if so inclined...
# aws cloudformation delete-stack --stack-name simple-lambda
AWSTemplateFormatVersion: 2010-09-09
Description: Udemy Rocking AWS Serverless (simple lambda)

Parameters:

  LambdaFunctionName:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$
    Default: simple-lambda

Resources:

  SimpleLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      # So lambda can write logs
      ManagedPolicyArns: 
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  SimpleLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Role: !GetAtt SimpleLambdaRole.Arn
      Runtime: nodejs16.x
      Handler: index.handler
      Code:
        ZipFile: |
          exports.handler = async (event, context) => {     
            // console.log("ENVIRONMENT VARIABLES\n" + JSON.stringify(process.env, null, 2))
            // console.info("EVENT\n" + JSON.stringify(event, null, 2))
            console.log("\n" +
                        "routeKey:       " + event.routeKey       + "\n" +
                        "rawPath:        " + event.rawPath        + "\n" +
                        "rawQueryString: " + event.rawQueryString)
            // console.warn("Event not processed")
            const response = {
              statusCode: 200,
              body: "Lambda: success"
            }
            return response
          }
      MemorySize: 128
      Timeout: 30

  # Thanks https://ldoughty.com/2020/01/aws-http-api-gateway-cloudformation-setup/
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Join [/,["/aws/lambda", !Ref SimpleLambda ]]
      RetentionInDays: 3
